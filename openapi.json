{
  "openapi": "3.0.1",
  "info": {
    "title": "Schiphol",
    "version": "1.0.0",
    "description": ".",
    "contact": {
      "email": "max.van.kampen@alicon.nl"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://schiphol.aliconnect.nl/terms/"
  },
  "externalDocs": {
    "description": "Find out more about MyApp",
    "url": "https://aliconnect.nl"
  },
  "servers": [
    {
      "url": "https://aliconnect.nl"
    }
  ],
  "paths": {
    "/js": {
      "get": {
        "operationId": "/aim/js",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "aliconnect_auth": [
              "read:web"
            ]
          }
        ]
      }
    },
    "/login": {
      "get": {
        "operationId": "/aim/",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "aliconnect_auth": [
              "read:web"
            ]
          }
        ]
      }
    },
    "/": {
      "get": {
        "operationId": "def.get",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        }
      },
      "post": {
        "operationId": "def.post",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "aim_auth": [
              "admin.readwrite"
            ]
          }
        ]
      }
    },
    "/account": {
      "post": {
        "tags": [
          "Authentication"
        ],
        "operationId": "account.post",
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "emailaddress": {
                    "type": "string",
                    "description": ""
                  },
                  "scope": {
                    "type": "string",
                    "description": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "aim_auth": [
              "admin.readwrite"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Authentication"
        ],
        "operationId": "account.patch",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "properties": {
                  "emailaddress": {
                    "type": "string",
                    "description": ""
                  },
                  "scope": {
                    "type": "string",
                    "description": ""
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "aim_auth": [
              "admin.readwrite"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Authentication"
        ],
        "operationId": "account.delete",
        "responses": {
          "200": {
            "description": "successful operation"
          }
        },
        "security": [
          {
            "aim_auth": [
              "admin.readwrite"
            ]
          }
        ]
      }
    },
    "/file({id})": {
      "patch": {
        "tags": [
          "Files"
        ],
        "summary": "Updates a file",
        "operationId": "file_patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of file",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Files"
        ],
        "summary": "Deletes a file",
        "operationId": "file_delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of file",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/Company": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get list of Company",
        "operationId": "item(Company).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Add a new Company",
        "operationId": "Item(Company).add",
        "requestBody": {
          "description": "Company object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Company"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Company({id})": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Find Company by ID",
        "description": "Returns a single Company object",
        "operationId": "Item(Company,id).get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Company",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Updates a Company with form data",
        "operationId": "Item(Company,id).post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Company",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "Keyname": {
                    "title": "Keyname"
                  },
                  "Parent": {
                    "title": "Onderdeel van"
                  },
                  "CompanyName": {
                    "title": "Organisation"
                  },
                  "OfficeLocation": {
                    "title": "Site"
                  },
                  "Department": {
                    "title": "Department"
                  },
                  "BusinessPhones0": {
                    "title": "Telefoon"
                  },
                  "BusinessHomePage": {
                    "title": "Website"
                  },
                  "EmailAddresses1Address": {
                    "title": "Business Email"
                  },
                  "CompanyDescription": {
                    "title": "Company Description"
                  },
                  "Activiteiten": {
                    "title": "Company Activity"
                  },
                  "Employees": {
                    "title": "Employees"
                  },
                  "CompanyFax": {
                    "title": "Company Fax"
                  },
                  "CompanyEmail": {
                    "title": "Company Email"
                  },
                  "CompanyEmailSales": {
                    "title": "Company Email Verkoop"
                  },
                  "CompanyEmailPurchase": {
                    "title": "Company Email Inkoop"
                  },
                  "CompanyEmailService": {
                    "title": "Company Email Service"
                  },
                  "CompanyEmailInvoice": {
                    "title": "Company Email Facturen"
                  },
                  "BusinessAddress": {
                    "title": "Vestigingsadres"
                  },
                  "BusinessAddressStreet": {},
                  "BusinessAddressNumber": {},
                  "BusinessAddressAdd": {},
                  "BusinessAddressPostalCode": {},
                  "BusinessAddressCity": {
                    "title": "Plaats"
                  },
                  "BusinessAddressTown": {},
                  "BusinessAddressState": {},
                  "BusinessAddressCountry": {},
                  "CompanyEmailInvoice1": {
                    "title": "Company Email Facturen"
                  },
                  "CompanyEmailInvoice2": {
                    "title": "Company Email Facturen"
                  },
                  "CompanyEmailInvoice3": {
                    "title": "Company Email Facturen"
                  },
                  "geolocatie": {},
                  "geolocatie2": {},
                  "OtherAddress": {
                    "title": "Post adres"
                  },
                  "OtherAddressStreet": {},
                  "OtherAddressNumber": {},
                  "OtherAddressAdd": {},
                  "OtherAddressPostalCode": {},
                  "OtherAddressCity": {},
                  "OtherAddressTown": {},
                  "OtherAddressState": {},
                  "OtherAddressCountry": {},
                  "KvKnr": {
                    "title": "KvK nummer"
                  },
                  "KvKvestigingsnr": {
                    "title": "Vestigingsnr"
                  },
                  "KvKinschrijving": {
                    "title": "Inschrijving"
                  },
                  "KvKdatum": {
                    "title": "Datum"
                  },
                  "Branche": {
                    "title": "Branche"
                  },
                  "Hoofdcategorie": {
                    "title": "Hoofdcategorie"
                  },
                  "Categorie": {
                    "title": "Categorie"
                  },
                  "Subcategorie": {
                    "title": "Subcategorie"
                  },
                  "BTWnr": {
                    "title": "BTW nummer"
                  },
                  "IBAN": {
                    "title": "IBAN nummer"
                  },
                  "BIC": {
                    "title": "BIC nummer"
                  },
                  "CEO": {
                    "title": "CEO"
                  },
                  "filterproperties": {
                    "title": "Filter eigenschappen"
                  },
                  "properties": {
                    "title": "Extra eigenschappen"
                  },
                  "StartDateTime": {
                    "title": "Volgend overleg"
                  },
                  "StartTijd": {
                    "title": "Starttijd"
                  },
                  "EndDateTime": {
                    "title": "Deadline"
                  },
                  "FinishDateTime": {
                    "title": "Gereed"
                  },
                  "Historie": {
                    "title": "Historie"
                  },
                  "Aandachtspunten": {
                    "title": "Actueel"
                  },
                  "AccountManager": {
                    "title": "Account Manager"
                  },
                  "DebNr": {
                    "title": "Debiteur nummer"
                  },
                  "FactuurKorting": {
                    "title": "Factuur korting"
                  },
                  "VrachtKost": {
                    "title": "Vracht kosten"
                  },
                  "BtwProc": {
                    "title": "BTW Percentage"
                  },
                  "DebSaldo": {
                    "title": "Debiteur Saldo"
                  },
                  "DebLastOrder": {
                    "title": "Laatste order"
                  },
                  "DebYearOrder": {
                    "title": "Jaar bestelling"
                  },
                  "DebState": {
                    "title": "State"
                  },
                  "CredNr": {
                    "title": "Crediteur nummer"
                  },
                  "CredSaldo": {
                    "title": "Crediteur Saldo"
                  },
                  "CredState": {
                    "title": "State"
                  },
                  "Owner": {
                    "title": "Owner"
                  },
                  "hostName": {
                    "title": "Host"
                  },
                  "placeid": {
                    "title": "Place ID"
                  },
                  "purchaseref": {
                    "title": "aliconnect inkoop opdracht"
                  },
                  "ASM": {
                    "title": "Account Sales Manager"
                  },
                  "SalesSupport": {
                    "title": "Sales Support"
                  },
                  "SalesSupport2": {
                    "title": "Sales Support 2"
                  },
                  "Cluster": {
                    "title": "Cluster"
                  },
                  "Children": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Company"
        ],
        "summary": "Updates a Company",
        "operationId": "Item(Company,id).patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Company",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Company object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Company"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Company"
        ],
        "summary": "Deletes a Company",
        "operationId": "Item(Company,id).delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Company",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Company({id})/file": {
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Adds an attachement to a Company object with form data",
        "operationId": "Item(Company,id).file(post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Company",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/Company({id})/children": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get children of Company object by ID",
        "description": "Returns all child objects of a Company object",
        "operationId": "Item(Company,id).children()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Company({id})/references": {
      "get": {
        "tags": [
          "Company"
        ],
        "summary": "Get children of Company object by ID",
        "description": "Returns all child objects of a Company object",
        "operationId": "Item(Company,id).references()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Company({id})/Employees": {
      "get": {
        "tags": [
          "Company",
          "Contact"
        ],
        "summary": "Find Company by ID and selects all of schema Contact",
        "description": "Returns a list of Employees",
        "operationId": "Item(Company,id).link(Employees,get)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Company"
        ],
        "summary": "Adds an attachement to a Company object with form data",
        "operationId": "Item(Company,id).link(Employees,post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Company",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Company({id})/Employees({linkId})": {
      "delete": {
        "tags": [
          "Company",
          "Contact"
        ],
        "summary": "Find Company by ID and selects all of schema Contact",
        "description": "Returns a list of Employees",
        "operationId": "Item(Company,id).link(Employees,delete)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "path",
            "name": "linkId",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Contact": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get list of Contact",
        "operationId": "item(Contact).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Add a new Contact",
        "operationId": "Item(Contact).add",
        "requestBody": {
          "description": "Contact object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Contact({id})": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Find Contact by ID",
        "description": "Returns a single Contact object",
        "operationId": "Item(Contact,id).get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Contact",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Updates a Contact with form data",
        "operationId": "Item(Contact,id).post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Contact",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "State": {
                    "title": "Functie Status"
                  },
                  "Fav": {
                    "title": "Fav"
                  },
                  "Initials": {
                    "title": "Initials"
                  },
                  "GivenName": {
                    "title": "GivenName"
                  },
                  "FirstName": {
                    "title": "FirstName"
                  },
                  "MiddleName": {
                    "title": "MiddleName"
                  },
                  "Surname": {
                    "title": "Surname"
                  },
                  "Company": {
                    "title": "Company"
                  },
                  "CompanyName": {
                    "title": "CompanyName"
                  },
                  "OfficeLocation": {
                    "title": "OfficeLocation"
                  },
                  "Department": {
                    "title": "Afdeling"
                  },
                  "Manager": {
                    "title": "Manager"
                  },
                  "Assistant": {
                    "title": "Assistant"
                  },
                  "JobTitle": {
                    "title": "JobTitle"
                  },
                  "StartDateTime": {
                    "title": "StartDateTime"
                  },
                  "FinishDateTime": {
                    "title": "FinishDateTime"
                  },
                  "Arbeidsrelatie": {
                    "title": "Contract"
                  },
                  "BusinessPhones0": {
                    "title": "Company Phone"
                  },
                  "BusinessHomePage": {
                    "title": "Company Website"
                  },
                  "EmailAddresses1Address": {
                    "title": "Company Email"
                  },
                  "MobilePhone1": {
                    "title": "Contact Mobile"
                  },
                  "BusinessPhones1": {
                    "title": "Contact Phone"
                  },
                  "EmailAddresses0Address": {
                    "title": "Contact Email"
                  },
                  "BusinessAddress": {
                    "title": "BusinessAddress"
                  },
                  "OtherAddress": {
                    "title": "Post adres"
                  },
                  "EmailAddresses2Address": {
                    "title": "EmailAddresses2Address"
                  },
                  "HomePhones0": {
                    "title": "HomePhones0"
                  },
                  "HomePhones1": {
                    "title": "HomePhones1"
                  },
                  "SpouseName": {
                    "title": "SpouseName"
                  },
                  "Birthday": {
                    "title": "Birthday"
                  },
                  "HomeAddress": {
                    "title": "HomeAddress"
                  },
                  "AfspraakDatum": {
                    "title": "Volgend overleg"
                  },
                  "AfspraakTijd": {
                    "title": "Starttijd"
                  },
                  "AfspraakOnderwerp": {
                    "title": "Onderwerp"
                  },
                  "ResourceName": {
                    "title": "Resource name"
                  },
                  "ResourceType": {
                    "title": "Resource type"
                  },
                  "ResourceAvail": {
                    "title": "Beschikbaarheid"
                  },
                  "ResourcePlan": {
                    "title": "Planbaar"
                  },
                  "verlof": {
                    "title": "Verlof"
                  },
                  "Gebruiker": {
                    "title": "User"
                  },
                  "groupID": {
                    "title": "Usergroup"
                  },
                  "Product": {
                    "title": "Products"
                  },
                  "Children": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Contact"
        ],
        "summary": "Updates a Contact",
        "operationId": "Item(Contact,id).patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Contact",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Contact object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Contact"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Contact"
        ],
        "summary": "Deletes a Contact",
        "operationId": "Item(Contact,id).delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Contact",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Contact({id})/file": {
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Adds an attachement to a Contact object with form data",
        "operationId": "Item(Contact,id).file(post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Contact",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/Contact({id})/children": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get children of Contact object by ID",
        "description": "Returns all child objects of a Contact object",
        "operationId": "Item(Contact,id).children()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Contact({id})/references": {
      "get": {
        "tags": [
          "Contact"
        ],
        "summary": "Get children of Contact object by ID",
        "description": "Returns all child objects of a Contact object",
        "operationId": "Item(Contact,id).references()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Contact({id})/Product": {
      "get": {
        "tags": [
          "Contact",
          "System"
        ],
        "summary": "Find Contact by ID and selects all of schema System",
        "description": "Returns a list of Product",
        "operationId": "Item(Contact,id).link(Product,get)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Contact"
        ],
        "summary": "Adds an attachement to a Contact object with form data",
        "operationId": "Item(Contact,id).link(Product,post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Contact",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Contact({id})/Product({linkId})": {
      "delete": {
        "tags": [
          "Contact",
          "System"
        ],
        "summary": "Find Contact by ID and selects all of schema System",
        "description": "Returns a list of Product",
        "operationId": "Item(Contact,id).link(Product,delete)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "path",
            "name": "linkId",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Map": {
      "get": {
        "tags": [
          "Map"
        ],
        "summary": "Get list of Map",
        "operationId": "item(Map).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "map.read"
            ]
          },
          {
            "aim_auth": [
              "map.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Map"
        ],
        "summary": "Add a new Map",
        "operationId": "Item(Map).add",
        "requestBody": {
          "description": "Map object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Map"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "map.readwrite"
            ]
          },
          {
            "aim_auth": [
              "map.readwrite"
            ]
          }
        ]
      }
    },
    "/Website": {
      "get": {
        "tags": [
          "Website"
        ],
        "summary": "Get list of Website",
        "operationId": "item(Website).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Website"
        ],
        "summary": "Add a new Website",
        "operationId": "Item(Website).add",
        "requestBody": {
          "description": "Website object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Website"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Website({id})": {
      "get": {
        "tags": [
          "Website"
        ],
        "summary": "Find Website by ID",
        "description": "Returns a single Website object",
        "operationId": "Item(Website,id).get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Website",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Website"
        ],
        "summary": "Updates a Website with form data",
        "operationId": "Item(Website,id).post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Website",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "state": {
                    "format": "radio",
                    "title": "Status"
                  },
                  "startDT": {
                    "title": "Start",
                    "format": "date"
                  },
                  "endDT": {
                    "title": "End",
                    "format": "date"
                  },
                  "finishDT": {
                    "title": "Publish",
                    "format": "date"
                  },
                  "Domain": {
                    "title": "Domain"
                  },
                  "Description": {
                    "format": "div",
                    "title": "Inleiding"
                  },
                  "BodyHTML": {
                    "format": "div",
                    "title": "Hoofdtekst"
                  },
                  "AccountPrice": {
                    "title": "Account Price"
                  },
                  "BaseColor": {
                    "title": "Base color"
                  },
                  "Slogans": {
                    "format": "textarea",
                    "title": "Slogans"
                  },
                  "Activiteiten": {
                    "format": "textarea",
                    "title": "Company Activity"
                  },
                  "InvoiceRef": {
                    "title": "Factuur referentie"
                  },
                  "InvoiceEmail": {
                    "title": "Factuur email"
                  },
                  "StartDateTime": {
                    "title": "Start"
                  },
                  "EndDateTime": {
                    "title": "End"
                  },
                  "FinishDateTime": {
                    "title": "Publish"
                  },
                  "Children": {},
                  "Master": {
                    "title": "Onderdeel van"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Website"
        ],
        "summary": "Updates a Website",
        "operationId": "Item(Website,id).patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Website",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Website object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Website"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Website"
        ],
        "summary": "Deletes a Website",
        "operationId": "Item(Website,id).delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Website",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Website({id})/file": {
      "post": {
        "tags": [
          "Website"
        ],
        "summary": "Adds an attachement to a Website object with form data",
        "operationId": "Item(Website,id).file(post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Website",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/Website({id})/children": {
      "get": {
        "tags": [
          "Website"
        ],
        "summary": "Get children of Website object by ID",
        "description": "Returns all child objects of a Website object",
        "operationId": "Item(Website,id).children()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Website({id})/references": {
      "get": {
        "tags": [
          "Website"
        ],
        "summary": "Get children of Website object by ID",
        "description": "Returns all child objects of a Website object",
        "operationId": "Item(Website,id).references()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Webpage": {
      "get": {
        "tags": [
          "Webpage"
        ],
        "summary": "Get list of Webpage",
        "operationId": "item(Webpage).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Webpage"
        ],
        "summary": "Add a new Webpage",
        "operationId": "Item(Webpage).add",
        "requestBody": {
          "description": "Webpage object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Webpage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Webpage({id})": {
      "get": {
        "tags": [
          "Webpage"
        ],
        "summary": "Find Webpage by ID",
        "description": "Returns a single Webpage object",
        "operationId": "Item(Webpage,id).get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Webpage",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Webpage"
        ],
        "summary": "Updates a Webpage with form data",
        "operationId": "Item(Webpage,id).post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Webpage",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "state": {
                    "format": "radio",
                    "title": "Status"
                  },
                  "startDT": {
                    "title": "Start",
                    "format": "date"
                  },
                  "endDT": {
                    "title": "End",
                    "format": "date"
                  },
                  "finishDT": {
                    "title": "Publish",
                    "format": "date"
                  },
                  "News": {
                    "title": "Nieuws",
                    "format": "checkbox"
                  },
                  "Master": {
                    "title": "Onderdeel van"
                  },
                  "Title": {
                    "title": "Title",
                    "format": "text"
                  },
                  "Keywords": {
                    "title": "Zoekwoorden"
                  },
                  "Description": {
                    "format": "textarea",
                    "title": "Inleiding"
                  },
                  "BodyHTML": {
                    "format": "div",
                    "title": "Hoofdtekst"
                  },
                  "File": {
                    "format": "files"
                  },
                  "State": {
                    "format": "radio",
                    "title": "Status"
                  },
                  "StartDateTime": {
                    "title": "Start",
                    "format": "datetime"
                  },
                  "EndDateTime": {
                    "title": "End",
                    "format": "datetime"
                  },
                  "FinishDateTime": {
                    "title": "Publish",
                    "format": "datetime"
                  },
                  "IsSelected": {
                    "title": "Selected",
                    "format": "checkbox"
                  },
                  "Children": {
                    "format": "hidden"
                  },
                  "Chapter": {
                    "format": "hidden"
                  },
                  "Webpage": {
                    "format": "hidden"
                  },
                  "Source": {
                    "title": "Kopie van"
                  },
                  "Inherit": {
                    "title": "Afgeleid van"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Webpage"
        ],
        "summary": "Updates a Webpage",
        "operationId": "Item(Webpage,id).patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Webpage",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Webpage object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Webpage"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Webpage"
        ],
        "summary": "Deletes a Webpage",
        "operationId": "Item(Webpage,id).delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Webpage",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Webpage({id})/file": {
      "post": {
        "tags": [
          "Webpage"
        ],
        "summary": "Adds an attachement to a Webpage object with form data",
        "operationId": "Item(Webpage,id).file(post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Webpage",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/Webpage({id})/children": {
      "get": {
        "tags": [
          "Webpage"
        ],
        "summary": "Get children of Webpage object by ID",
        "description": "Returns all child objects of a Webpage object",
        "operationId": "Item(Webpage,id).children()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Webpage({id})/references": {
      "get": {
        "tags": [
          "Webpage"
        ],
        "summary": "Get children of Webpage object by ID",
        "description": "Returns all child objects of a Webpage object",
        "operationId": "Item(Webpage,id).references()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Webpage({id})/Webpage": {
      "get": {
        "tags": [
          "Webpage",
          "Webpage"
        ],
        "summary": "Find Webpage by ID and selects all of schema Webpage",
        "description": "Returns a list of Webpage",
        "operationId": "Item(Webpage,id).link(Webpage,get)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Webpage"
        ],
        "summary": "Adds an attachement to a Webpage object with form data",
        "operationId": "Item(Webpage,id).link(Webpage,post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Webpage",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Webpage({id})/Webpage({linkId})": {
      "delete": {
        "tags": [
          "Webpage",
          "Webpage"
        ],
        "summary": "Find Webpage by ID and selects all of schema Webpage",
        "description": "Returns a list of Webpage",
        "operationId": "Item(Webpage,id).link(Webpage,delete)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "path",
            "name": "linkId",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Schema": {
      "get": {
        "tags": [
          "Schema"
        ],
        "summary": "Get list of Schema",
        "operationId": "item(Schema).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schema.read"
            ]
          },
          {
            "aim_auth": [
              "schema.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Schema"
        ],
        "summary": "Add a new Schema",
        "operationId": "Item(Schema).add",
        "requestBody": {
          "description": "Schema object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Schema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schema.readwrite"
            ]
          },
          {
            "aim_auth": [
              "schema.readwrite"
            ]
          }
        ]
      }
    },
    "/Schema({id})": {
      "get": {
        "tags": [
          "Schema"
        ],
        "summary": "Find Schema by ID",
        "description": "Returns a single Schema object",
        "operationId": "Item(Schema,id).get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Schema",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schema.read"
            ]
          },
          {
            "aim_auth": [
              "schema.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Schema"
        ],
        "summary": "Updates a Schema with form data",
        "operationId": "Item(Schema,id).post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Schema",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "File": {
                    "format": "files"
                  },
                  "Title": {
                    "title": "Title",
                    "format": "text"
                  },
                  "Children": {
                    "format": "hidden"
                  },
                  "Master": {
                    "title": "Onderdeel van"
                  },
                  "Source": {
                    "title": "Kopie van"
                  },
                  "Inherit": {
                    "title": "Afgeleid van"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schema.readwrite"
            ]
          },
          {
            "aim_auth": [
              "schema.readwrite"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Schema"
        ],
        "summary": "Updates a Schema",
        "operationId": "Item(Schema,id).patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Schema",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Schema object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Schema"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schema.readwrite"
            ]
          },
          {
            "aim_auth": [
              "schema.readwrite"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Schema"
        ],
        "summary": "Deletes a Schema",
        "operationId": "Item(Schema,id).delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Schema",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schema.readwrite"
            ]
          },
          {
            "aim_auth": [
              "schema.readwrite"
            ]
          }
        ]
      }
    },
    "/Schema({id})/file": {
      "post": {
        "tags": [
          "Schema"
        ],
        "summary": "Adds an attachement to a Schema object with form data",
        "operationId": "Item(Schema,id).file(post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Schema",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/Schema({id})/children": {
      "get": {
        "tags": [
          "Schema"
        ],
        "summary": "Get children of Schema object by ID",
        "description": "Returns all child objects of a Schema object",
        "operationId": "Item(Schema,id).children()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schema.read"
            ]
          },
          {
            "aim_auth": [
              "schema.read"
            ]
          }
        ]
      }
    },
    "/Schema({id})/references": {
      "get": {
        "tags": [
          "Schema"
        ],
        "summary": "Get children of Schema object by ID",
        "description": "Returns all child objects of a Schema object",
        "operationId": "Item(Schema,id).references()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schema.read"
            ]
          },
          {
            "aim_auth": [
              "schema.read"
            ]
          }
        ]
      }
    },
    "/Message": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Get list of Message",
        "operationId": "item(Message).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "message.read"
            ]
          },
          {
            "aim_auth": [
              "message.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Add a new Message",
        "operationId": "Item(Message).add",
        "requestBody": {
          "description": "Message object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "message.readwrite"
            ]
          },
          {
            "aim_auth": [
              "message.readwrite"
            ]
          }
        ]
      }
    },
    "/Message({id})": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Find Message by ID",
        "description": "Returns a single Message object",
        "operationId": "Item(Message,id).get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Message",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "message.read"
            ]
          },
          {
            "aim_auth": [
              "message.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Updates a Message with form data",
        "operationId": "Item(Message,id).post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Message",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "CreatedByTitle": {},
                  "CreatedByID": {},
                  "CreatedDateTime": {},
                  "BodyHTML": {
                    "format": "rich"
                  },
                  "Content": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "message.readwrite"
            ]
          },
          {
            "aim_auth": [
              "message.readwrite"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Message"
        ],
        "summary": "Updates a Message",
        "operationId": "Item(Message,id).patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Message",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Message object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Message"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "message.readwrite"
            ]
          },
          {
            "aim_auth": [
              "message.readwrite"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Message"
        ],
        "summary": "Deletes a Message",
        "operationId": "Item(Message,id).delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Message",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "message.readwrite"
            ]
          },
          {
            "aim_auth": [
              "message.readwrite"
            ]
          }
        ]
      }
    },
    "/Message({id})/file": {
      "post": {
        "tags": [
          "Message"
        ],
        "summary": "Adds an attachement to a Message object with form data",
        "operationId": "Item(Message,id).file(post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Message",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/Message({id})/children": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Get children of Message object by ID",
        "description": "Returns all child objects of a Message object",
        "operationId": "Item(Message,id).children()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "message.read"
            ]
          },
          {
            "aim_auth": [
              "message.read"
            ]
          }
        ]
      }
    },
    "/Message({id})/references": {
      "get": {
        "tags": [
          "Message"
        ],
        "summary": "Get children of Message object by ID",
        "description": "Returns all child objects of a Message object",
        "operationId": "Item(Message,id).references()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "message.read"
            ]
          },
          {
            "aim_auth": [
              "message.read"
            ]
          }
        ]
      }
    },
    "/Schakelbericht": {
      "get": {
        "tags": [
          "Schakelbericht"
        ],
        "summary": "Get list of Schakelbericht",
        "operationId": "item(Schakelbericht).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schakelbericht.read"
            ]
          },
          {
            "aim_auth": [
              "schakelbericht.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Schakelbericht"
        ],
        "summary": "Add a new Schakelbericht",
        "operationId": "Item(Schakelbericht).add",
        "requestBody": {
          "description": "Schakelbericht object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Schakelbericht"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schakelbericht.readwrite"
            ]
          },
          {
            "aim_auth": [
              "schakelbericht.readwrite"
            ]
          }
        ]
      }
    },
    "/Schakelbericht({id})": {
      "get": {
        "tags": [
          "Schakelbericht"
        ],
        "summary": "Find Schakelbericht by ID",
        "description": "Returns a single Schakelbericht object",
        "operationId": "Item(Schakelbericht,id).get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Schakelbericht",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schakelbericht.read"
            ]
          },
          {
            "aim_auth": [
              "schakelbericht.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Schakelbericht"
        ],
        "summary": "Updates a Schakelbericht with form data",
        "operationId": "Item(Schakelbericht,id).post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Schakelbericht",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "State": {
                    "format": "select"
                  },
                  "Station2": {},
                  "Master": {
                    "format": "hidden"
                  },
                  "Fav": {
                    "format": "hidden"
                  },
                  "UserID": {
                    "format": "hidden"
                  },
                  "Files": {
                    "format": "files"
                  },
                  "View": {
                    "format": "sharecam"
                  },
                  "ID": {
                    "title": "Schakelberichtnummer"
                  },
                  "CreatedDateTime": {},
                  "LastModifiedDateTime": {},
                  "StartDateTime": {},
                  "EndDateTime": {},
                  "FinishDateTime": {},
                  "Station1": {},
                  "ContractorCompanyName": {
                    "format": "text"
                  },
                  "ContractorContact": {
                    "format": "text"
                  },
                  "ContractorEmail": {
                    "format": "email"
                  },
                  "ContractorBusinessAddres": {
                    "format": "address"
                  },
                  "ContractorOtherAddres": {
                    "format": "address"
                  },
                  "WorkTitle": {
                    "format": "text"
                  },
                  "WorkDescription": {
                    "format": "html"
                  },
                  "WotkLocations": {
                    "format": "address"
                  },
                  "Station": {},
                  "Uitschakelingen": {
                    "format": "radio"
                  },
                  "UitschakelingenTwee": {},
                  "Accepted": {
                    "format": "checkbox"
                  },
                  "AcceptedComment": {
                    "format": "html"
                  },
                  "VrijgaveVeiligstellen": {
                    "format": "checkbox"
                  },
                  "ArrivalDateTime": {
                    "format": "datetime"
                  },
                  "WorkStarted": {
                    "format": "checkbox"
                  },
                  "WorkStartSignature": {
                    "format": "signature"
                  },
                  "SwitchOff": {
                    "format": "checkbox"
                  },
                  "WorkFinished": {
                    "format": "checkbox"
                  },
                  "WorkFinish": {
                    "format": "signature"
                  },
                  "SwitchOn": {
                    "format": "checkbox"
                  },
                  "Messages": {
                    "format": "hidden"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schakelbericht.readwrite"
            ]
          },
          {
            "aim_auth": [
              "schakelbericht.readwrite"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Schakelbericht"
        ],
        "summary": "Updates a Schakelbericht",
        "operationId": "Item(Schakelbericht,id).patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Schakelbericht",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Schakelbericht object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Schakelbericht"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schakelbericht.readwrite"
            ]
          },
          {
            "aim_auth": [
              "schakelbericht.readwrite"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Schakelbericht"
        ],
        "summary": "Deletes a Schakelbericht",
        "operationId": "Item(Schakelbericht,id).delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Schakelbericht",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schakelbericht.readwrite"
            ]
          },
          {
            "aim_auth": [
              "schakelbericht.readwrite"
            ]
          }
        ]
      }
    },
    "/Schakelbericht({id})/file": {
      "post": {
        "tags": [
          "Schakelbericht"
        ],
        "summary": "Adds an attachement to a Schakelbericht object with form data",
        "operationId": "Item(Schakelbericht,id).file(post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Schakelbericht",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/Schakelbericht({id})/children": {
      "get": {
        "tags": [
          "Schakelbericht"
        ],
        "summary": "Get children of Schakelbericht object by ID",
        "description": "Returns all child objects of a Schakelbericht object",
        "operationId": "Item(Schakelbericht,id).children()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schakelbericht.read"
            ]
          },
          {
            "aim_auth": [
              "schakelbericht.read"
            ]
          }
        ]
      }
    },
    "/Schakelbericht({id})/references": {
      "get": {
        "tags": [
          "Schakelbericht"
        ],
        "summary": "Get children of Schakelbericht object by ID",
        "description": "Returns all child objects of a Schakelbericht object",
        "operationId": "Item(Schakelbericht,id).references()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schakelbericht.read"
            ]
          },
          {
            "aim_auth": [
              "schakelbericht.read"
            ]
          }
        ]
      }
    },
    "/Schakelbericht({id})/Messages": {
      "get": {
        "tags": [
          "Schakelbericht",
          "Message"
        ],
        "summary": "Find Schakelbericht by ID and selects all of schema Message",
        "description": "Returns a list of Messages",
        "operationId": "Item(Schakelbericht,id).link(Messages,get)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schakelbericht.read"
            ]
          },
          {
            "aim_auth": [
              "schakelbericht.read"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Schakelbericht"
        ],
        "summary": "Adds an attachement to a Schakelbericht object with form data",
        "operationId": "Item(Schakelbericht,id).link(Messages,post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Schakelbericht",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schakelbericht.readwrite"
            ]
          },
          {
            "aim_auth": [
              "schakelbericht.readwrite"
            ]
          }
        ]
      }
    },
    "/Schakelbericht({id})/Messages({linkId})": {
      "delete": {
        "tags": [
          "Schakelbericht",
          "Message"
        ],
        "summary": "Find Schakelbericht by ID and selects all of schema Message",
        "description": "Returns a list of Messages",
        "operationId": "Item(Schakelbericht,id).link(Messages,delete)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "path",
            "name": "linkId",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "api_key": [
              "schakelbericht.read"
            ]
          },
          {
            "aim_auth": [
              "schakelbericht.read"
            ]
          }
        ]
      }
    },
    "/System": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get list of System",
        "operationId": "item(System).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "System"
        ],
        "summary": "Add a new System",
        "operationId": "Item(System).add",
        "requestBody": {
          "description": "System object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/System({id})": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Find System by ID",
        "description": "Returns a single System object",
        "operationId": "Item(System,id).get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of System",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "System"
        ],
        "summary": "Updates a System with form data",
        "operationId": "Item(System,id).post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of System",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "State": {
                    "title": "State",
                    "format": "radio"
                  },
                  "CreatedDateTime": {
                    "format": "hidden"
                  },
                  "LastModifiedDateTime": {
                    "format": "hidden"
                  },
                  "LastVisitDateTime": {
                    "format": "hidden"
                  },
                  "StartDateTime": {
                    "format": "hidden"
                  },
                  "EndDateTime": {
                    "format": "hidden"
                  },
                  "FinishDateTime": {
                    "format": "hidden"
                  },
                  "Brand": {
                    "title": "Merk"
                  },
                  "Product": {
                    "title": "Product"
                  },
                  "Model": {
                    "title": "Model"
                  },
                  "Type": {
                    "title": "Type"
                  },
                  "Serie": {
                    "title": "Serie"
                  },
                  "Version": {
                    "title": "Version"
                  },
                  "Shape": {
                    "title": "Vorm"
                  },
                  "Material": {
                    "title": "Material"
                  },
                  "Master": {
                    "title": "Onderdeel van"
                  },
                  "Source": {
                    "title": "Afgeleid van"
                  },
                  "Children": {},
                  "Message": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "System"
        ],
        "summary": "Updates a System",
        "operationId": "Item(System,id).patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of System",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "System object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/System"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "System"
        ],
        "summary": "Deletes a System",
        "operationId": "Item(System,id).delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of System",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/System({id})/file": {
      "post": {
        "tags": [
          "System"
        ],
        "summary": "Adds an attachement to a System object with form data",
        "operationId": "Item(System,id).file(post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of System",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/System({id})/children": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get children of System object by ID",
        "description": "Returns all child objects of a System object",
        "operationId": "Item(System,id).children()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/System({id})/references": {
      "get": {
        "tags": [
          "System"
        ],
        "summary": "Get children of System object by ID",
        "description": "Returns all child objects of a System object",
        "operationId": "Item(System,id).references()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Attribute": {
      "get": {
        "tags": [
          "Attribute"
        ],
        "summary": "Get list of Attribute",
        "operationId": "item(Attribute).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Attribute"
        ],
        "summary": "Add a new Attribute",
        "operationId": "Item(Attribute).add",
        "requestBody": {
          "description": "Attribute object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attribute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Attribute({id})": {
      "get": {
        "tags": [
          "Attribute"
        ],
        "summary": "Find Attribute by ID",
        "description": "Returns a single Attribute object",
        "operationId": "Item(Attribute,id).get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Attribute",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Attribute"
        ],
        "summary": "Updates a Attribute with form data",
        "operationId": "Item(Attribute,id).post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Attribute",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "Name": {
                    "title": "Name"
                  },
                  "Title": {
                    "title": "title"
                  },
                  "Description": {
                    "title": "Description"
                  },
                  "State": {
                    "title": "State"
                  },
                  "StateMessage": {
                    "title": "StateMessage"
                  },
                  "Value": {
                    "title": "Value"
                  },
                  "Quality": {
                    "title": "Quality"
                  },
                  "AttributeType": {
                    "title": "Attribute type"
                  },
                  "ModifiedDateTime": {
                    "title": "Modified"
                  },
                  "ValueType": {
                    "title": "Value type"
                  },
                  "Enum": {
                    "title": "Enummeration"
                  },
                  "Unit": {
                    "title": "Unit"
                  },
                  "Calc": {
                    "title": "Calculation function"
                  },
                  "Min": {
                    "title": "Min"
                  },
                  "Max": {
                    "title": "Max"
                  },
                  "Step": {
                    "title": "Step"
                  },
                  "Optimum": {
                    "title": "Optimum"
                  },
                  "Low": {
                    "title": "Low"
                  },
                  "High": {
                    "title": "High"
                  },
                  "Hysteresis": {
                    "title": "Hysteresis"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Attribute"
        ],
        "summary": "Updates a Attribute",
        "operationId": "Item(Attribute,id).patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Attribute",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Attribute object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Attribute"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Attribute"
        ],
        "summary": "Deletes a Attribute",
        "operationId": "Item(Attribute,id).delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Attribute",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Attribute({id})/file": {
      "post": {
        "tags": [
          "Attribute"
        ],
        "summary": "Adds an attachement to a Attribute object with form data",
        "operationId": "Item(Attribute,id).file(post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Attribute",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/Attribute({id})/children": {
      "get": {
        "tags": [
          "Attribute"
        ],
        "summary": "Get children of Attribute object by ID",
        "description": "Returns all child objects of a Attribute object",
        "operationId": "Item(Attribute,id).children()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Attribute({id})/references": {
      "get": {
        "tags": [
          "Attribute"
        ],
        "summary": "Get children of Attribute object by ID",
        "description": "Returns all child objects of a Attribute object",
        "operationId": "Item(Attribute,id).references()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/ControlIO": {
      "get": {
        "tags": [
          "ControlIO"
        ],
        "summary": "Get list of ControlIO",
        "operationId": "item(ControlIO).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "ControlIO"
        ],
        "summary": "Add a new ControlIO",
        "operationId": "Item(ControlIO).add",
        "requestBody": {
          "description": "ControlIO object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ControlIO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/ControlIO({id})": {
      "get": {
        "tags": [
          "ControlIO"
        ],
        "summary": "Find ControlIO by ID",
        "description": "Returns a single ControlIO object",
        "operationId": "Item(ControlIO,id).get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of ControlIO",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "ControlIO"
        ],
        "summary": "Updates a ControlIO with form data",
        "operationId": "Item(ControlIO,id).post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of ControlIO",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "SignalType": {
                    "title": "Type"
                  },
                  "Permission": {
                    "title": "Permission"
                  },
                  "Direction": {
                    "title": "Direction (vervalt)"
                  },
                  "Tag": {
                    "title": "TAG"
                  },
                  "Value": {
                    "title": "Value"
                  },
                  "Quality": {
                    "title": "Quality"
                  },
                  "ReadAddress": {
                    "title": "Read Address"
                  },
                  "ReadAddressBit": {
                    "title": "Bit number"
                  },
                  "OID": {
                    "title": "OID"
                  },
                  "SNMPType": {
                    "title": "SNMP Type"
                  },
                  "MinValidValue": {
                    "title": "Min Valid Value"
                  },
                  "MaxValidValue": {
                    "title": "Max Valid Value"
                  },
                  "Deadband": {
                    "title": "Deadband"
                  },
                  "MinRawValue": {
                    "title": "Min Raw Value"
                  },
                  "MaxRawValue": {
                    "title": "Max Raw Value"
                  },
                  "MinEngValue": {
                    "title": "Min Engineering Value"
                  },
                  "MaxEngValue": {
                    "title": "Max Engineering Value"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "ControlIO"
        ],
        "summary": "Updates a ControlIO",
        "operationId": "Item(ControlIO,id).patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of ControlIO",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "ControlIO object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ControlIO"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "ControlIO"
        ],
        "summary": "Deletes a ControlIO",
        "operationId": "Item(ControlIO,id).delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of ControlIO",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/ControlIO({id})/file": {
      "post": {
        "tags": [
          "ControlIO"
        ],
        "summary": "Adds an attachement to a ControlIO object with form data",
        "operationId": "Item(ControlIO,id).file(post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of ControlIO",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/ControlIO({id})/children": {
      "get": {
        "tags": [
          "ControlIO"
        ],
        "summary": "Get children of ControlIO object by ID",
        "description": "Returns all child objects of a ControlIO object",
        "operationId": "Item(ControlIO,id).children()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/ControlIO({id})/references": {
      "get": {
        "tags": [
          "ControlIO"
        ],
        "summary": "Get children of ControlIO object by ID",
        "description": "Returns all child objects of a ControlIO object",
        "operationId": "Item(ControlIO,id).references()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Device": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "Get list of Device",
        "operationId": "item(Device).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Add a new Device",
        "operationId": "Item(Device).add",
        "requestBody": {
          "description": "Device object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Device"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Device({id})": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "Find Device by ID",
        "description": "Returns a single Device object",
        "operationId": "Item(Device,id).get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Device",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Updates a Device with form data",
        "operationId": "Item(Device,id).post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Device",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "Master": {
                    "title": "Product"
                  },
                  "IPAddress": {
                    "title": "IP address"
                  },
                  "Port": {
                    "title": "Port"
                  },
                  "PollInterval": {
                    "title": "Poll Interval"
                  },
                  "ReadAddress": {
                    "title": "Read Address"
                  },
                  "ReadLength": {
                    "title": "Read Length"
                  },
                  "Community": {
                    "title": "Community"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Device"
        ],
        "summary": "Updates a Device",
        "operationId": "Item(Device,id).patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Device",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Device object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Device"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Device"
        ],
        "summary": "Deletes a Device",
        "operationId": "Item(Device,id).delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Device",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Device({id})/file": {
      "post": {
        "tags": [
          "Device"
        ],
        "summary": "Adds an attachement to a Device object with form data",
        "operationId": "Item(Device,id).file(post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Device",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/Device({id})/children": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "Get children of Device object by ID",
        "description": "Returns all child objects of a Device object",
        "operationId": "Item(Device,id).children()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Device({id})/references": {
      "get": {
        "tags": [
          "Device"
        ],
        "summary": "Get children of Device object by ID",
        "description": "Returns all child objects of a Device object",
        "operationId": "Item(Device,id).references()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Product": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get list of Product",
        "operationId": "item(Product).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Add a new Product",
        "operationId": "Item(Product).add",
        "requestBody": {
          "description": "Product object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Product({id})": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Find Product by ID",
        "description": "Returns a single Product object",
        "operationId": "Item(Product,id).get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Product",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Updates a Product with form data",
        "operationId": "Item(Product,id).post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Product",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "State": {
                    "title": "State"
                  },
                  "IsPublic": {
                    "title": "Publish"
                  },
                  "Source": {
                    "title": "Afgeleid van"
                  },
                  "SerialNumber": {
                    "title": "Serial Number"
                  },
                  "Merk": {
                    "title": "Merk"
                  },
                  "Product": {
                    "title": "Product"
                  },
                  "Type": {
                    "title": "Type"
                  },
                  "Soort": {
                    "title": "Soort"
                  },
                  "Serie": {
                    "title": "Serie"
                  },
                  "Version": {
                    "title": "Versie"
                  },
                  "Unit": {
                    "title": "Eenheid"
                  },
                  "Content": {
                    "title": "Inhoud"
                  },
                  "ContentUnit": {
                    "title": "Inhoud eenheid"
                  },
                  "ArtNr": {
                    "title": "Product Code"
                  },
                  "SupplierArtDescription": {
                    "title": "Product omschrijving"
                  },
                  "SupplierWebTitle": {
                    "title": "Product titel"
                  },
                  "ExtraTitle": {
                    "title": "Extra titel"
                  },
                  "Manufacturer": {
                    "title": "Fabrikant"
                  },
                  "Productgroep": {
                    "title": "Productgroep"
                  },
                  "SupplierProductUrl": {
                    "title": "Product pagina"
                  },
                  "AbisTekst": {
                    "title": "AbisTekst"
                  },
                  "Toepassing": {
                    "title": "Toepassing"
                  },
                  "Oms": {
                    "title": "Extra tekst"
                  },
                  "Description": {
                    "title": "Inleiding"
                  },
                  "BodyHTML": {
                    "title": "Hoofdtekst"
                  },
                  "Options": {
                    "title": "Opties"
                  },
                  "filterproperties": {
                    "title": "Filter eigenschappen"
                  },
                  "properties": {
                    "title": "Extra eigenschappen"
                  },
                  "EAN": {
                    "title": "EAN"
                  },
                  "Btw": {
                    "title": "BTW soort"
                  },
                  "Weight": {
                    "title": "Eenheid gewicht"
                  },
                  "cp": {
                    "title": "Catalogus prijs",
                    "format": "currency"
                  },
                  "Unit1": {
                    "title": "Besteleenheid"
                  },
                  "Unit1Quant": {
                    "title": "Besteleenheid aantal"
                  },
                  "sd": {
                    "title": "Verkoop korting"
                  },
                  "sp": {
                    "title": "Verkoop prijs",
                    "format": "currency"
                  },
                  "cd": {
                    "title": "Klant korting"
                  },
                  "pd": {
                    "title": "Inkoop korting"
                  },
                  "pp": {
                    "title": "Inkoop prijs",
                    "format": "currency"
                  },
                  "Supplier": {
                    "title": "Leverancier"
                  },
                  "Stock": {
                    "title": "Op voorraad"
                  },
                  "Loc": {
                    "title": "Locatie"
                  },
                  "minStock": {
                    "title": "Minimale voorraad"
                  },
                  "orderQuant": {
                    "title": "Bestel hoeveelheid"
                  },
                  "id": {
                    "title": "Product ID"
                  },
                  "IP": {
                    "title": "IP adress"
                  },
                  "Port": {
                    "title": "Port"
                  },
                  "Children": {},
                  "Master": {
                    "title": "Onderdeel van"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Product"
        ],
        "summary": "Updates a Product",
        "operationId": "Item(Product,id).patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Product",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Product object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Product"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "summary": "Deletes a Product",
        "operationId": "Item(Product,id).delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Product",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Product({id})/file": {
      "post": {
        "tags": [
          "Product"
        ],
        "summary": "Adds an attachement to a Product object with form data",
        "operationId": "Item(Product,id).file(post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Product",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/Product({id})/children": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get children of Product object by ID",
        "description": "Returns all child objects of a Product object",
        "operationId": "Item(Product,id).children()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Product({id})/references": {
      "get": {
        "tags": [
          "Product"
        ],
        "summary": "Get children of Product object by ID",
        "description": "Returns all child objects of a Product object",
        "operationId": "Item(Product,id).references()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Location": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Get list of Location",
        "operationId": "item(Location).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Add a new Location",
        "operationId": "Item(Location).add",
        "requestBody": {
          "description": "Location object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Location({id})": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Find Location by ID",
        "description": "Returns a single Location object",
        "operationId": "Item(Location,id).get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Updates a Location with form data",
        "operationId": "Item(Location,id).post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "Title": {
                    "title": "Title"
                  },
                  "Subject": {
                    "title": "Subject"
                  },
                  "Summary": {
                    "title": "Summary"
                  },
                  "Children": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "Location"
        ],
        "summary": "Updates a Location",
        "operationId": "Item(Location,id).patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "Location object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "Location"
        ],
        "summary": "Deletes a Location",
        "operationId": "Item(Location,id).delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Location({id})/file": {
      "post": {
        "tags": [
          "Location"
        ],
        "summary": "Adds an attachement to a Location object with form data",
        "operationId": "Item(Location,id).file(post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of Location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/Location({id})/children": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Get children of Location object by ID",
        "description": "Returns all child objects of a Location object",
        "operationId": "Item(Location,id).children()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/Location({id})/references": {
      "get": {
        "tags": [
          "Location"
        ],
        "summary": "Get children of Location object by ID",
        "description": "Returns all child objects of a Location object",
        "operationId": "Item(Location,id).references()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/dms_System": {
      "get": {
        "tags": [
          "dms_System"
        ],
        "summary": "Get list of dms_System",
        "operationId": "item(dms_System).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "dms_System"
        ],
        "summary": "Add a new dms_System",
        "operationId": "Item(dms_System).add",
        "requestBody": {
          "description": "dms_System object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dms_System"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/dms_System({id})": {
      "get": {
        "tags": [
          "dms_System"
        ],
        "summary": "Find dms_System by ID",
        "description": "Returns a single dms_System object",
        "operationId": "Item(dms_System,id).get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dms_System",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "dms_System"
        ],
        "summary": "Updates a dms_System with form data",
        "operationId": "Item(dms_System,id).post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dms_System",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "Manufacturer": {
                    "title": "Manufacturer"
                  },
                  "Brand": {
                    "title": "Merk"
                  },
                  "Product": {
                    "title": "Product"
                  },
                  "System": {
                    "title": "Related systems"
                  },
                  "Name": {
                    "title": "Name"
                  },
                  "Title": {
                    "title": "Title"
                  },
                  "Subject": {
                    "title": "Subject"
                  },
                  "Model": {
                    "title": "Model"
                  },
                  "Type": {
                    "title": "Type"
                  },
                  "Serie": {
                    "title": "Serie"
                  },
                  "Version": {
                    "title": "Version"
                  },
                  "Shape": {
                    "title": "Vorm"
                  },
                  "Material": {
                    "title": "Material"
                  },
                  "Quality": {
                    "title": "Quality"
                  },
                  "Color": {
                    "title": "Kleur"
                  },
                  "Purpose": {
                    "title": "Ten behoeve van"
                  },
                  "Unit": {
                    "title": "Eenheid"
                  },
                  "Content": {
                    "title": "Inhoud"
                  },
                  "ContentUnit": {
                    "title": "Inhoud eenheid",
                    "enum": [
                      "liter",
                      "meter",
                      "mm",
                      "nano",
                      "mu"
                    ]
                  },
                  "Description": {
                    "title": "Omschrijving"
                  },
                  "BodyHTML": {
                    "title": "Pagina tekst"
                  },
                  "Remark": {
                    "title": "Opmerking"
                  },
                  "ProductTitle": {
                    "title": "Product titel"
                  },
                  "keyname": {
                    "title": "Keyname"
                  },
                  "tag": {
                    "title": "Label"
                  },
                  "Subsystem": {
                    "title": "Subsystem"
                  },
                  "Dimensions": {
                    "title": "Afmeting"
                  },
                  "Length": {
                    "title": "Length"
                  },
                  "Width": {
                    "title": "Width"
                  },
                  "Height": {
                    "title": "Height"
                  },
                  "Weight": {
                    "title": "Weight"
                  },
                  "PackageUnit": {
                    "title": "Verpakking eenheid"
                  },
                  "PackageQuantity": {
                    "title": "Verpakking aantal"
                  },
                  "PackageLength": {
                    "title": "Length"
                  },
                  "PackageWidth": {
                    "title": "Width"
                  },
                  "PackageHeight": {
                    "title": "Height"
                  },
                  "PackageWeight": {
                    "title": "Weight"
                  },
                  "EAN": {
                    "title": "EAN"
                  },
                  "PowerKVA": {
                    "title": "Power"
                  },
                  "PowerFuse": {
                    "title": "Fuse"
                  },
                  "PowerConnection": {
                    "title": "Power connection"
                  },
                  "Air": {
                    "title": "Air"
                  },
                  "AirConnection": {
                    "title": "Air connection"
                  },
                  "Dewpoint": {
                    "title": "Dewpoint"
                  },
                  "Water": {
                    "title": "Water"
                  },
                  "WaterConnection": {
                    "title": "Water connection"
                  },
                  "StockLocation": {
                    "title": "Locatie"
                  },
                  "Stock": {
                    "title": "Voorraad"
                  },
                  "MinimumStock": {
                    "title": "Minimum voorraad"
                  },
                  "StartOfStock": {
                    "title": "Begin voorraad"
                  },
                  "CatalogPrice": {
                    "title": "Catalogus prijs",
                    "format": "currency"
                  },
                  "SalesDiscount": {
                    "title": "Verkoop korting"
                  },
                  "SalesMargin": {
                    "title": "Verkoop marge"
                  },
                  "SalesPrice": {
                    "title": "Verkoop prijs",
                    "format": "currency"
                  },
                  "CustomerDiscount": {
                    "title": "Klant korting"
                  },
                  "FAT": {
                    "title": "BTW soort, invoern in FAT"
                  },
                  "FixedCostPrice": {
                    "title": "Kostprijs"
                  },
                  "Supplier": {
                    "title": "Leverancier"
                  },
                  "PurchaseDiscount": {
                    "title": "Inkoop korting"
                  },
                  "PurchasePrice": {
                    "title": "Inkoop prijs",
                    "format": "currency"
                  },
                  "OrderQuant": {
                    "title": "Inkoop hoeveelheid"
                  },
                  "CAD": {
                    "title": "CAD model"
                  },
                  "ObjectChildren": {
                    "title": "CAD onderdelen"
                  },
                  "PosX": {
                    "title": "Positie X"
                  },
                  "PosY": {
                    "title": "Positie Y"
                  },
                  "PosZ": {
                    "title": "Positie Z"
                  },
                  "RotX": {
                    "title": "Rotatie X-as"
                  },
                  "RotY": {
                    "title": "Rotatie Y-as"
                  },
                  "RotZ": {
                    "title": "Rotatie Z-as"
                  },
                  "State": {
                    "title": "State"
                  },
                  "WWW": {
                    "title": "Deze pagina tonen op internet"
                  },
                  "News": {
                    "title": "Deze pagina opnemen in nieuwsberichten"
                  },
                  "CreatedDT": {
                    "title": "Created"
                  },
                  "StartDateTime": {
                    "title": "Start"
                  },
                  "EndDateTime": {
                    "title": "Deadline"
                  },
                  "FinishDateTime": {
                    "title": "Completed"
                  },
                  "Master": {
                    "title": "Onderdeel van"
                  },
                  "Source": {
                    "title": "Afgeleid van"
                  },
                  "Layout": {
                    "title": "Layout"
                  },
                  "SystemFolder": {
                    "title": "Network folder"
                  },
                  "TagName": {
                    "title": "TagName"
                  },
                  "SofonNr": {
                    "title": "Sofon nr"
                  },
                  "ProjectNr": {
                    "title": "Project nr"
                  },
                  "cspnummer": {
                    "title": "CSP nummer"
                  },
                  "Children": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "dms_System"
        ],
        "summary": "Updates a dms_System",
        "operationId": "Item(dms_System,id).patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dms_System",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "dms_System object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dms_System"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "dms_System"
        ],
        "summary": "Deletes a dms_System",
        "operationId": "Item(dms_System,id).delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dms_System",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/dms_System({id})/file": {
      "post": {
        "tags": [
          "dms_System"
        ],
        "summary": "Adds an attachement to a dms_System object with form data",
        "operationId": "Item(dms_System,id).file(post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dms_System",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/dms_System({id})/children": {
      "get": {
        "tags": [
          "dms_System"
        ],
        "summary": "Get children of dms_System object by ID",
        "description": "Returns all child objects of a dms_System object",
        "operationId": "Item(dms_System,id).children()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/dms_System({id})/references": {
      "get": {
        "tags": [
          "dms_System"
        ],
        "summary": "Get children of dms_System object by ID",
        "description": "Returns all child objects of a dms_System object",
        "operationId": "Item(dms_System,id).references()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/dms_System({id})/Subsystem": {
      "get": {
        "tags": [
          "dms_System",
          "System"
        ],
        "summary": "Find dms_System by ID and selects all of schema System",
        "description": "Returns a list of Subsystem",
        "operationId": "Item(dms_System,id).link(Subsystem,get)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "dms_System"
        ],
        "summary": "Adds an attachement to a dms_System object with form data",
        "operationId": "Item(dms_System,id).link(Subsystem,post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dms_System",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/dms_System({id})/Subsystem({linkId})": {
      "delete": {
        "tags": [
          "dms_System",
          "System"
        ],
        "summary": "Find dms_System by ID and selects all of schema System",
        "description": "Returns a list of Subsystem",
        "operationId": "Item(dms_System,id).link(Subsystem,delete)",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "path",
            "name": "linkId",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/dms_Location": {
      "get": {
        "tags": [
          "dms_Location"
        ],
        "summary": "Get list of dms_Location",
        "operationId": "item(dms_Location).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "dms_Location"
        ],
        "summary": "Add a new dms_Location",
        "operationId": "Item(dms_Location).add",
        "requestBody": {
          "description": "dms_Location object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dms_Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/dms_Location({id})": {
      "get": {
        "tags": [
          "dms_Location"
        ],
        "summary": "Find dms_Location by ID",
        "description": "Returns a single dms_Location object",
        "operationId": "Item(dms_Location,id).get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dms_Location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "dms_Location"
        ],
        "summary": "Updates a dms_Location with form data",
        "operationId": "Item(dms_Location,id).post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dms_Location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "Title": {
                    "title": "Title"
                  },
                  "Subject": {
                    "title": "Subject"
                  },
                  "Summary": {
                    "title": "Summary"
                  },
                  "Children": {},
                  "Master": {
                    "title": "Onderdeel van"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "dms_Location"
        ],
        "summary": "Updates a dms_Location",
        "operationId": "Item(dms_Location,id).patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dms_Location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "dms_Location object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dms_Location"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "dms_Location"
        ],
        "summary": "Deletes a dms_Location",
        "operationId": "Item(dms_Location,id).delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dms_Location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/dms_Location({id})/file": {
      "post": {
        "tags": [
          "dms_Location"
        ],
        "summary": "Adds an attachement to a dms_Location object with form data",
        "operationId": "Item(dms_Location,id).file(post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dms_Location",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/dms_Location({id})/children": {
      "get": {
        "tags": [
          "dms_Location"
        ],
        "summary": "Get children of dms_Location object by ID",
        "description": "Returns all child objects of a dms_Location object",
        "operationId": "Item(dms_Location,id).children()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/dms_Location({id})/references": {
      "get": {
        "tags": [
          "dms_Location"
        ],
        "summary": "Get children of dms_Location object by ID",
        "description": "Returns all child objects of a dms_Location object",
        "operationId": "Item(dms_Location,id).references()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/dms_Group": {
      "get": {
        "tags": [
          "dms_Group"
        ],
        "summary": "Get list of dms_Group",
        "operationId": "item(dms_Group).find",
        "parameters": [
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "dms_Group"
        ],
        "summary": "Add a new dms_Group",
        "operationId": "Item(dms_Group).add",
        "requestBody": {
          "description": "dms_Group object that needs to be added",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dms_Group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/dms_Group({id})": {
      "get": {
        "tags": [
          "dms_Group"
        ],
        "summary": "Find dms_Group by ID",
        "description": "Returns a single dms_Group object",
        "operationId": "Item(dms_Group,id).get",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dms_Group",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "post": {
        "tags": [
          "dms_Group"
        ],
        "summary": "Updates a dms_Group with form data",
        "operationId": "Item(dms_Group,id).post",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dms_Group",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/x-www-form-urlencoded": {
              "schema": {
                "properties": {
                  "Title": {
                    "title": "Title"
                  },
                  "Subject": {
                    "title": "Subject"
                  },
                  "Summary": {
                    "title": "Summary"
                  },
                  "Children": {}
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "patch": {
        "tags": [
          "dms_Group"
        ],
        "summary": "Updates a dms_Group",
        "operationId": "Item(dms_Group,id).patch",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dms_Group",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "description": "dms_Group object that needs to be updated",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/dms_Group"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      },
      "delete": {
        "tags": [
          "dms_Group"
        ],
        "summary": "Deletes a dms_Group",
        "operationId": "Item(dms_Group,id).delete",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dms_Group",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/dms_Group({id})/file": {
      "post": {
        "tags": [
          "dms_Group"
        ],
        "summary": "Adds an attachement to a dms_Group object with form data",
        "operationId": "Item(dms_Group,id).file(post)",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of dms_Group",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "properties": {
                  "additionalMetadata": {
                    "type": "string",
                    "description": "Additional data to pass to server"
                  },
                  "file": {
                    "type": "string",
                    "description": "file to upload",
                    "format": "binary"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "aim_auth": [
              "file.write"
            ]
          }
        ]
      }
    },
    "/dms_Group({id})/children": {
      "get": {
        "tags": [
          "dms_Group"
        ],
        "summary": "Get children of dms_Group object by ID",
        "description": "Returns all child objects of a dms_Group object",
        "operationId": "Item(dms_Group,id).children()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    },
    "/dms_Group({id})/references": {
      "get": {
        "tags": [
          "dms_Group"
        ],
        "summary": "Get children of dms_Group object by ID",
        "description": "Returns all child objects of a dms_Group object",
        "operationId": "Item(dms_Group,id).references()",
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "ItemID",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "top",
            "description": "Maximum number of records",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "in": "query",
            "name": "select",
            "description": "List of fieldnames",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "filter",
            "description": "Filter",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "search",
            "description": "Search words seperated with spaces",
            "schema": {
              "type": "string"
            }
          },
          {
            "in": "query",
            "name": "order",
            "description": "Sort order fieldnames sperated with a comma",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation"
          },
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Attribute not found"
          },
          "405": {
            "description": "Invalid input"
          }
        },
        "security": [
          {
            "default_auth": [
              "write:web",
              "read:web",
              "write:all",
              "admin:write",
              "write:admin"
            ]
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "Company": {
        "properties": {
          "Keyname": {
            "title": "Keyname"
          },
          "Parent": {
            "title": "Onderdeel van"
          },
          "CompanyName": {
            "title": "Organisation"
          },
          "OfficeLocation": {
            "title": "Site"
          },
          "Department": {
            "title": "Department"
          },
          "BusinessPhones0": {
            "title": "Telefoon"
          },
          "BusinessHomePage": {
            "title": "Website"
          },
          "EmailAddresses1Address": {
            "title": "Business Email"
          },
          "CompanyDescription": {
            "title": "Company Description"
          },
          "Activiteiten": {
            "title": "Company Activity"
          },
          "Employees": {
            "title": "Employees"
          },
          "CompanyFax": {
            "title": "Company Fax"
          },
          "CompanyEmail": {
            "title": "Company Email"
          },
          "CompanyEmailSales": {
            "title": "Company Email Verkoop"
          },
          "CompanyEmailPurchase": {
            "title": "Company Email Inkoop"
          },
          "CompanyEmailService": {
            "title": "Company Email Service"
          },
          "CompanyEmailInvoice": {
            "title": "Company Email Facturen"
          },
          "BusinessAddress": {
            "title": "Vestigingsadres"
          },
          "BusinessAddressStreet": {},
          "BusinessAddressNumber": {},
          "BusinessAddressAdd": {},
          "BusinessAddressPostalCode": {},
          "BusinessAddressCity": {
            "title": "Plaats"
          },
          "BusinessAddressTown": {},
          "BusinessAddressState": {},
          "BusinessAddressCountry": {},
          "CompanyEmailInvoice1": {
            "title": "Company Email Facturen"
          },
          "CompanyEmailInvoice2": {
            "title": "Company Email Facturen"
          },
          "CompanyEmailInvoice3": {
            "title": "Company Email Facturen"
          },
          "geolocatie": {},
          "geolocatie2": {},
          "OtherAddress": {
            "title": "Post adres"
          },
          "OtherAddressStreet": {},
          "OtherAddressNumber": {},
          "OtherAddressAdd": {},
          "OtherAddressPostalCode": {},
          "OtherAddressCity": {},
          "OtherAddressTown": {},
          "OtherAddressState": {},
          "OtherAddressCountry": {},
          "KvKnr": {
            "title": "KvK nummer"
          },
          "KvKvestigingsnr": {
            "title": "Vestigingsnr"
          },
          "KvKinschrijving": {
            "title": "Inschrijving"
          },
          "KvKdatum": {
            "title": "Datum"
          },
          "Branche": {
            "title": "Branche"
          },
          "Hoofdcategorie": {
            "title": "Hoofdcategorie"
          },
          "Categorie": {
            "title": "Categorie"
          },
          "Subcategorie": {
            "title": "Subcategorie"
          },
          "BTWnr": {
            "title": "BTW nummer"
          },
          "IBAN": {
            "title": "IBAN nummer"
          },
          "BIC": {
            "title": "BIC nummer"
          },
          "CEO": {
            "title": "CEO"
          },
          "filterproperties": {
            "title": "Filter eigenschappen"
          },
          "properties": {
            "title": "Extra eigenschappen"
          },
          "StartDateTime": {
            "title": "Volgend overleg"
          },
          "StartTijd": {
            "title": "Starttijd"
          },
          "EndDateTime": {
            "title": "Deadline"
          },
          "FinishDateTime": {
            "title": "Gereed"
          },
          "Historie": {
            "title": "Historie"
          },
          "Aandachtspunten": {
            "title": "Actueel"
          },
          "AccountManager": {
            "title": "Account Manager"
          },
          "DebNr": {
            "title": "Debiteur nummer"
          },
          "FactuurKorting": {
            "title": "Factuur korting"
          },
          "VrachtKost": {
            "title": "Vracht kosten"
          },
          "BtwProc": {
            "title": "BTW Percentage"
          },
          "DebSaldo": {
            "title": "Debiteur Saldo"
          },
          "DebLastOrder": {
            "title": "Laatste order"
          },
          "DebYearOrder": {
            "title": "Jaar bestelling"
          },
          "DebState": {
            "title": "State"
          },
          "CredNr": {
            "title": "Crediteur nummer"
          },
          "CredSaldo": {
            "title": "Crediteur Saldo"
          },
          "CredState": {
            "title": "State"
          },
          "Owner": {
            "title": "Owner"
          },
          "hostName": {
            "title": "Host"
          },
          "placeid": {
            "title": "Place ID"
          },
          "purchaseref": {
            "title": "aliconnect inkoop opdracht"
          },
          "ASM": {
            "title": "Account Sales Manager"
          },
          "SalesSupport": {
            "title": "Sales Support"
          },
          "SalesSupport2": {
            "title": "Sales Support 2"
          },
          "Cluster": {
            "title": "Cluster"
          },
          "Children": {}
        }
      },
      "Contact": {
        "properties": {
          "State": {
            "title": "Functie Status"
          },
          "Fav": {
            "title": "Fav"
          },
          "Initials": {
            "title": "Initials"
          },
          "GivenName": {
            "title": "GivenName"
          },
          "FirstName": {
            "title": "FirstName"
          },
          "MiddleName": {
            "title": "MiddleName"
          },
          "Surname": {
            "title": "Surname"
          },
          "Company": {
            "title": "Company"
          },
          "CompanyName": {
            "title": "CompanyName"
          },
          "OfficeLocation": {
            "title": "OfficeLocation"
          },
          "Department": {
            "title": "Afdeling"
          },
          "Manager": {
            "title": "Manager"
          },
          "Assistant": {
            "title": "Assistant"
          },
          "JobTitle": {
            "title": "JobTitle"
          },
          "StartDateTime": {
            "title": "StartDateTime"
          },
          "FinishDateTime": {
            "title": "FinishDateTime"
          },
          "Arbeidsrelatie": {
            "title": "Contract"
          },
          "BusinessPhones0": {
            "title": "Company Phone"
          },
          "BusinessHomePage": {
            "title": "Company Website"
          },
          "EmailAddresses1Address": {
            "title": "Company Email"
          },
          "MobilePhone1": {
            "title": "Contact Mobile"
          },
          "BusinessPhones1": {
            "title": "Contact Phone"
          },
          "EmailAddresses0Address": {
            "title": "Contact Email"
          },
          "BusinessAddress": {
            "title": "BusinessAddress"
          },
          "OtherAddress": {
            "title": "Post adres"
          },
          "EmailAddresses2Address": {
            "title": "EmailAddresses2Address"
          },
          "HomePhones0": {
            "title": "HomePhones0"
          },
          "HomePhones1": {
            "title": "HomePhones1"
          },
          "SpouseName": {
            "title": "SpouseName"
          },
          "Birthday": {
            "title": "Birthday"
          },
          "HomeAddress": {
            "title": "HomeAddress"
          },
          "AfspraakDatum": {
            "title": "Volgend overleg"
          },
          "AfspraakTijd": {
            "title": "Starttijd"
          },
          "AfspraakOnderwerp": {
            "title": "Onderwerp"
          },
          "ResourceName": {
            "title": "Resource name"
          },
          "ResourceType": {
            "title": "Resource type"
          },
          "ResourceAvail": {
            "title": "Beschikbaarheid"
          },
          "ResourcePlan": {
            "title": "Planbaar"
          },
          "verlof": {
            "title": "Verlof"
          },
          "Gebruiker": {
            "title": "User"
          },
          "groupID": {
            "title": "Usergroup"
          },
          "Product": {
            "title": "Products"
          },
          "Children": {}
        }
      },
      "Map": {},
      "Website": {
        "properties": {
          "state": {
            "format": "radio",
            "title": "Status"
          },
          "startDT": {
            "title": "Start",
            "format": "date"
          },
          "endDT": {
            "title": "End",
            "format": "date"
          },
          "finishDT": {
            "title": "Publish",
            "format": "date"
          },
          "Domain": {
            "title": "Domain"
          },
          "Description": {
            "format": "div",
            "title": "Inleiding"
          },
          "BodyHTML": {
            "format": "div",
            "title": "Hoofdtekst"
          },
          "AccountPrice": {
            "title": "Account Price"
          },
          "BaseColor": {
            "title": "Base color"
          },
          "Slogans": {
            "format": "textarea",
            "title": "Slogans"
          },
          "Activiteiten": {
            "format": "textarea",
            "title": "Company Activity"
          },
          "InvoiceRef": {
            "title": "Factuur referentie"
          },
          "InvoiceEmail": {
            "title": "Factuur email"
          },
          "StartDateTime": {
            "title": "Start"
          },
          "EndDateTime": {
            "title": "End"
          },
          "FinishDateTime": {
            "title": "Publish"
          },
          "Children": {},
          "Master": {
            "title": "Onderdeel van"
          }
        }
      },
      "Webpage": {
        "properties": {
          "state": {
            "format": "radio",
            "title": "Status"
          },
          "startDT": {
            "title": "Start",
            "format": "date"
          },
          "endDT": {
            "title": "End",
            "format": "date"
          },
          "finishDT": {
            "title": "Publish",
            "format": "date"
          },
          "News": {
            "title": "Nieuws",
            "format": "checkbox"
          },
          "Master": {
            "title": "Onderdeel van"
          },
          "Title": {
            "title": "Title",
            "format": "text"
          },
          "Keywords": {
            "title": "Zoekwoorden"
          },
          "Description": {
            "format": "textarea",
            "title": "Inleiding"
          },
          "BodyHTML": {
            "format": "div",
            "title": "Hoofdtekst"
          },
          "File": {
            "format": "files"
          },
          "State": {
            "format": "radio",
            "title": "Status"
          },
          "StartDateTime": {
            "title": "Start",
            "format": "datetime"
          },
          "EndDateTime": {
            "title": "End",
            "format": "datetime"
          },
          "FinishDateTime": {
            "title": "Publish",
            "format": "datetime"
          },
          "IsSelected": {
            "title": "Selected",
            "format": "checkbox"
          },
          "Children": {
            "format": "hidden"
          },
          "Chapter": {
            "format": "hidden"
          },
          "Webpage": {
            "format": "hidden"
          },
          "Source": {
            "title": "Kopie van"
          },
          "Inherit": {
            "title": "Afgeleid van"
          }
        }
      },
      "Schema": {
        "properties": {
          "File": {
            "format": "files"
          },
          "Title": {
            "title": "Title",
            "format": "text"
          },
          "Children": {
            "format": "hidden"
          },
          "Master": {
            "title": "Onderdeel van"
          },
          "Source": {
            "title": "Kopie van"
          },
          "Inherit": {
            "title": "Afgeleid van"
          }
        }
      },
      "Message": {
        "properties": {
          "CreatedByTitle": {},
          "CreatedByID": {},
          "CreatedDateTime": {},
          "BodyHTML": {
            "format": "rich"
          },
          "Content": {}
        }
      },
      "Schakelbericht": {
        "properties": {
          "State": {
            "format": "select"
          },
          "Station2": {},
          "Master": {
            "format": "hidden"
          },
          "Fav": {
            "format": "hidden"
          },
          "UserID": {
            "format": "hidden"
          },
          "Files": {
            "format": "files"
          },
          "View": {
            "format": "sharecam"
          },
          "ID": {
            "title": "Schakelberichtnummer"
          },
          "CreatedDateTime": {},
          "LastModifiedDateTime": {},
          "StartDateTime": {},
          "EndDateTime": {},
          "FinishDateTime": {},
          "Station1": {},
          "ContractorCompanyName": {
            "format": "text"
          },
          "ContractorContact": {
            "format": "text"
          },
          "ContractorEmail": {
            "format": "email"
          },
          "ContractorBusinessAddres": {
            "format": "address"
          },
          "ContractorOtherAddres": {
            "format": "address"
          },
          "WorkTitle": {
            "format": "text"
          },
          "WorkDescription": {
            "format": "html"
          },
          "WotkLocations": {
            "format": "address"
          },
          "Station": {},
          "Uitschakelingen": {
            "format": "radio"
          },
          "UitschakelingenTwee": {},
          "Accepted": {
            "format": "checkbox"
          },
          "AcceptedComment": {
            "format": "html"
          },
          "VrijgaveVeiligstellen": {
            "format": "checkbox"
          },
          "ArrivalDateTime": {
            "format": "datetime"
          },
          "WorkStarted": {
            "format": "checkbox"
          },
          "WorkStartSignature": {
            "format": "signature"
          },
          "SwitchOff": {
            "format": "checkbox"
          },
          "WorkFinished": {
            "format": "checkbox"
          },
          "WorkFinish": {
            "format": "signature"
          },
          "SwitchOn": {
            "format": "checkbox"
          },
          "Messages": {
            "format": "hidden"
          }
        }
      },
      "System": {
        "properties": {
          "State": {
            "title": "State",
            "format": "radio"
          },
          "CreatedDateTime": {
            "format": "hidden"
          },
          "LastModifiedDateTime": {
            "format": "hidden"
          },
          "LastVisitDateTime": {
            "format": "hidden"
          },
          "StartDateTime": {
            "format": "hidden"
          },
          "EndDateTime": {
            "format": "hidden"
          },
          "FinishDateTime": {
            "format": "hidden"
          },
          "Brand": {
            "title": "Merk"
          },
          "Product": {
            "title": "Product"
          },
          "Model": {
            "title": "Model"
          },
          "Type": {
            "title": "Type"
          },
          "Serie": {
            "title": "Serie"
          },
          "Version": {
            "title": "Version"
          },
          "Shape": {
            "title": "Vorm"
          },
          "Material": {
            "title": "Material"
          },
          "Master": {
            "title": "Onderdeel van"
          },
          "Source": {
            "title": "Afgeleid van"
          },
          "Children": {},
          "Message": {}
        }
      },
      "Attribute": {
        "properties": {
          "Name": {
            "title": "Name"
          },
          "Title": {
            "title": "title"
          },
          "Description": {
            "title": "Description"
          },
          "State": {
            "title": "State"
          },
          "StateMessage": {
            "title": "StateMessage"
          },
          "Value": {
            "title": "Value"
          },
          "Quality": {
            "title": "Quality"
          },
          "AttributeType": {
            "title": "Attribute type"
          },
          "ModifiedDateTime": {
            "title": "Modified"
          },
          "ValueType": {
            "title": "Value type"
          },
          "Enum": {
            "title": "Enummeration"
          },
          "Unit": {
            "title": "Unit"
          },
          "Calc": {
            "title": "Calculation function"
          },
          "Min": {
            "title": "Min"
          },
          "Max": {
            "title": "Max"
          },
          "Step": {
            "title": "Step"
          },
          "Optimum": {
            "title": "Optimum"
          },
          "Low": {
            "title": "Low"
          },
          "High": {
            "title": "High"
          },
          "Hysteresis": {
            "title": "Hysteresis"
          }
        }
      },
      "ControlIO": {
        "properties": {
          "SignalType": {
            "title": "Type"
          },
          "Permission": {
            "title": "Permission"
          },
          "Direction": {
            "title": "Direction (vervalt)"
          },
          "Tag": {
            "title": "TAG"
          },
          "Value": {
            "title": "Value"
          },
          "Quality": {
            "title": "Quality"
          },
          "ReadAddress": {
            "title": "Read Address"
          },
          "ReadAddressBit": {
            "title": "Bit number"
          },
          "OID": {
            "title": "OID"
          },
          "SNMPType": {
            "title": "SNMP Type"
          },
          "MinValidValue": {
            "title": "Min Valid Value"
          },
          "MaxValidValue": {
            "title": "Max Valid Value"
          },
          "Deadband": {
            "title": "Deadband"
          },
          "MinRawValue": {
            "title": "Min Raw Value"
          },
          "MaxRawValue": {
            "title": "Max Raw Value"
          },
          "MinEngValue": {
            "title": "Min Engineering Value"
          },
          "MaxEngValue": {
            "title": "Max Engineering Value"
          }
        }
      },
      "Device": {
        "properties": {
          "Master": {
            "title": "Product"
          },
          "IPAddress": {
            "title": "IP address"
          },
          "Port": {
            "title": "Port"
          },
          "PollInterval": {
            "title": "Poll Interval"
          },
          "ReadAddress": {
            "title": "Read Address"
          },
          "ReadLength": {
            "title": "Read Length"
          },
          "Community": {
            "title": "Community"
          }
        }
      },
      "Product": {
        "properties": {
          "State": {
            "title": "State"
          },
          "IsPublic": {
            "title": "Publish"
          },
          "Source": {
            "title": "Afgeleid van"
          },
          "SerialNumber": {
            "title": "Serial Number"
          },
          "Merk": {
            "title": "Merk"
          },
          "Product": {
            "title": "Product"
          },
          "Type": {
            "title": "Type"
          },
          "Soort": {
            "title": "Soort"
          },
          "Serie": {
            "title": "Serie"
          },
          "Version": {
            "title": "Versie"
          },
          "Unit": {
            "title": "Eenheid"
          },
          "Content": {
            "title": "Inhoud"
          },
          "ContentUnit": {
            "title": "Inhoud eenheid"
          },
          "ArtNr": {
            "title": "Product Code"
          },
          "SupplierArtDescription": {
            "title": "Product omschrijving"
          },
          "SupplierWebTitle": {
            "title": "Product titel"
          },
          "ExtraTitle": {
            "title": "Extra titel"
          },
          "Manufacturer": {
            "title": "Fabrikant"
          },
          "Productgroep": {
            "title": "Productgroep"
          },
          "SupplierProductUrl": {
            "title": "Product pagina"
          },
          "AbisTekst": {
            "title": "AbisTekst"
          },
          "Toepassing": {
            "title": "Toepassing"
          },
          "Oms": {
            "title": "Extra tekst"
          },
          "Description": {
            "title": "Inleiding"
          },
          "BodyHTML": {
            "title": "Hoofdtekst"
          },
          "Options": {
            "title": "Opties"
          },
          "filterproperties": {
            "title": "Filter eigenschappen"
          },
          "properties": {
            "title": "Extra eigenschappen"
          },
          "EAN": {
            "title": "EAN"
          },
          "Btw": {
            "title": "BTW soort"
          },
          "Weight": {
            "title": "Eenheid gewicht"
          },
          "cp": {
            "title": "Catalogus prijs",
            "format": "currency"
          },
          "Unit1": {
            "title": "Besteleenheid"
          },
          "Unit1Quant": {
            "title": "Besteleenheid aantal"
          },
          "sd": {
            "title": "Verkoop korting"
          },
          "sp": {
            "title": "Verkoop prijs",
            "format": "currency"
          },
          "cd": {
            "title": "Klant korting"
          },
          "pd": {
            "title": "Inkoop korting"
          },
          "pp": {
            "title": "Inkoop prijs",
            "format": "currency"
          },
          "Supplier": {
            "title": "Leverancier"
          },
          "Stock": {
            "title": "Op voorraad"
          },
          "Loc": {
            "title": "Locatie"
          },
          "minStock": {
            "title": "Minimale voorraad"
          },
          "orderQuant": {
            "title": "Bestel hoeveelheid"
          },
          "id": {
            "title": "Product ID"
          },
          "IP": {
            "title": "IP adress"
          },
          "Port": {
            "title": "Port"
          },
          "Children": {},
          "Master": {
            "title": "Onderdeel van"
          }
        }
      },
      "Location": {
        "properties": {
          "Title": {
            "title": "Title"
          },
          "Subject": {
            "title": "Subject"
          },
          "Summary": {
            "title": "Summary"
          },
          "Children": {}
        }
      },
      "dms_System": {
        "properties": {
          "Manufacturer": {
            "title": "Manufacturer"
          },
          "Brand": {
            "title": "Merk"
          },
          "Product": {
            "title": "Product"
          },
          "System": {
            "title": "Related systems"
          },
          "Name": {
            "title": "Name"
          },
          "Title": {
            "title": "Title"
          },
          "Subject": {
            "title": "Subject"
          },
          "Model": {
            "title": "Model"
          },
          "Type": {
            "title": "Type"
          },
          "Serie": {
            "title": "Serie"
          },
          "Version": {
            "title": "Version"
          },
          "Shape": {
            "title": "Vorm"
          },
          "Material": {
            "title": "Material"
          },
          "Quality": {
            "title": "Quality"
          },
          "Color": {
            "title": "Kleur"
          },
          "Purpose": {
            "title": "Ten behoeve van"
          },
          "Unit": {
            "title": "Eenheid"
          },
          "Content": {
            "title": "Inhoud"
          },
          "ContentUnit": {
            "title": "Inhoud eenheid",
            "enum": [
              "liter",
              "meter",
              "mm",
              "nano",
              "mu"
            ]
          },
          "Description": {
            "title": "Omschrijving"
          },
          "BodyHTML": {
            "title": "Pagina tekst"
          },
          "Remark": {
            "title": "Opmerking"
          },
          "ProductTitle": {
            "title": "Product titel"
          },
          "keyname": {
            "title": "Keyname"
          },
          "tag": {
            "title": "Label"
          },
          "Subsystem": {
            "title": "Subsystem"
          },
          "Dimensions": {
            "title": "Afmeting"
          },
          "Length": {
            "title": "Length"
          },
          "Width": {
            "title": "Width"
          },
          "Height": {
            "title": "Height"
          },
          "Weight": {
            "title": "Weight"
          },
          "PackageUnit": {
            "title": "Verpakking eenheid"
          },
          "PackageQuantity": {
            "title": "Verpakking aantal"
          },
          "PackageLength": {
            "title": "Length"
          },
          "PackageWidth": {
            "title": "Width"
          },
          "PackageHeight": {
            "title": "Height"
          },
          "PackageWeight": {
            "title": "Weight"
          },
          "EAN": {
            "title": "EAN"
          },
          "PowerKVA": {
            "title": "Power"
          },
          "PowerFuse": {
            "title": "Fuse"
          },
          "PowerConnection": {
            "title": "Power connection"
          },
          "Air": {
            "title": "Air"
          },
          "AirConnection": {
            "title": "Air connection"
          },
          "Dewpoint": {
            "title": "Dewpoint"
          },
          "Water": {
            "title": "Water"
          },
          "WaterConnection": {
            "title": "Water connection"
          },
          "StockLocation": {
            "title": "Locatie"
          },
          "Stock": {
            "title": "Voorraad"
          },
          "MinimumStock": {
            "title": "Minimum voorraad"
          },
          "StartOfStock": {
            "title": "Begin voorraad"
          },
          "CatalogPrice": {
            "title": "Catalogus prijs",
            "format": "currency"
          },
          "SalesDiscount": {
            "title": "Verkoop korting"
          },
          "SalesMargin": {
            "title": "Verkoop marge"
          },
          "SalesPrice": {
            "title": "Verkoop prijs",
            "format": "currency"
          },
          "CustomerDiscount": {
            "title": "Klant korting"
          },
          "FAT": {
            "title": "BTW soort, invoern in FAT"
          },
          "FixedCostPrice": {
            "title": "Kostprijs"
          },
          "Supplier": {
            "title": "Leverancier"
          },
          "PurchaseDiscount": {
            "title": "Inkoop korting"
          },
          "PurchasePrice": {
            "title": "Inkoop prijs",
            "format": "currency"
          },
          "OrderQuant": {
            "title": "Inkoop hoeveelheid"
          },
          "CAD": {
            "title": "CAD model"
          },
          "ObjectChildren": {
            "title": "CAD onderdelen"
          },
          "PosX": {
            "title": "Positie X"
          },
          "PosY": {
            "title": "Positie Y"
          },
          "PosZ": {
            "title": "Positie Z"
          },
          "RotX": {
            "title": "Rotatie X-as"
          },
          "RotY": {
            "title": "Rotatie Y-as"
          },
          "RotZ": {
            "title": "Rotatie Z-as"
          },
          "State": {
            "title": "State"
          },
          "WWW": {
            "title": "Deze pagina tonen op internet"
          },
          "News": {
            "title": "Deze pagina opnemen in nieuwsberichten"
          },
          "CreatedDT": {
            "title": "Created"
          },
          "StartDateTime": {
            "title": "Start"
          },
          "EndDateTime": {
            "title": "Deadline"
          },
          "FinishDateTime": {
            "title": "Completed"
          },
          "Master": {
            "title": "Onderdeel van"
          },
          "Source": {
            "title": "Afgeleid van"
          },
          "Layout": {
            "title": "Layout"
          },
          "SystemFolder": {
            "title": "Network folder"
          },
          "TagName": {
            "title": "TagName"
          },
          "SofonNr": {
            "title": "Sofon nr"
          },
          "ProjectNr": {
            "title": "Project nr"
          },
          "cspnummer": {
            "title": "CSP nummer"
          },
          "Children": {}
        }
      },
      "dms_Location": {
        "properties": {
          "Title": {
            "title": "Title"
          },
          "Subject": {
            "title": "Subject"
          },
          "Summary": {
            "title": "Summary"
          },
          "Children": {},
          "Master": {
            "title": "Onderdeel van"
          }
        }
      },
      "dms_Group": {
        "properties": {
          "Title": {
            "title": "Title"
          },
          "Subject": {
            "title": "Subject"
          },
          "Summary": {
            "title": "Summary"
          },
          "Children": {}
        }
      }
    }
  },
  "tags": [
    {
      "name": "Authentication"
    },
    {
      "name": "Messages"
    },
    {
      "name": "Files"
    },
    {
      "name": "Company"
    },
    {
      "name": "Contact"
    },
    {
      "name": "Map"
    },
    {
      "name": "Website"
    },
    {
      "name": "Webpage"
    },
    {
      "name": "Schema"
    },
    {
      "name": "Message"
    },
    {
      "name": "Schakelbericht"
    },
    {
      "name": "System"
    },
    {
      "name": "Attribute"
    },
    {
      "name": "ControlIO"
    },
    {
      "name": "Device"
    },
    {
      "name": "Product"
    },
    {
      "name": "Location"
    },
    {
      "name": "dms_System"
    },
    {
      "name": "dms_Location"
    },
    {
      "name": "dms_Group"
    }
  ],
  "security": [
    {
      "api_key": []
    }
  ]
}